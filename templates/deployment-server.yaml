{{- if (.Values.serverSettings).replicaCount }}
{{/* Override defaults when conditions are met */}}
{{- $distributedExecution := "false" -}}
{{- $haEnabled := "false" -}}
{{- if (.Values.runnerSettings).replicaCount -}}
  {{- $distributedExecution = "true" -}}
{{- end -}}
{{- if gt ((.Values.serverSettings).replicaCount | default 0 | int) 1 -}}
  {{- $haEnabled = "true" -}}
{{- end -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "iag5.fullname" . }}-server
  labels:
    {{- include "iag5.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.serverSettings.replicaCount }}
  selector:
    matchLabels:
      {{- include "iag5.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- include "iag5.annotations" . | nindent 8 }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/component: server
        {{- include "iag5.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          env:
            # Application settings
            - name: GATEWAY_APPLICATION_MODE
              value: "server"
            - name: GATEWAY_SECRETS_ENCRYPT_KEY_FILE
              value: "/etc/gateway/keys/encryption.key"
            - name: GATEWAY_APPLICATION_CLUSTER_ID
              value: {{ .Values.applicationSettings.clusterId | quote }}
            - name: GATEWAY_LOG_LEVEL
              value: {{ .Values.applicationSettings.logLevel | default "INFO" | quote }}
            - name: GATEWAY_STORE_BACKEND
              value: {{ .Values.applicationSettings.storeBackend | default "memory" | quote }}
            {{- if eq .Values.applicationSettings.storeBackend "etcd" }}
            - name: GATEWAY_STORE_ETCD_HOSTS
              value: {{ .Values.applicationSettings.etcdHosts | quote }}
            - name: GATEWAY_STORE_ETCD_USE_TLS
              value: {{ .Values.applicationSettings.etcdUseTLS | default "false" | quote }}
            - name: GATEWAY_STORE_ETCD_CLIENT_CERT_AUTH
              value: {{ .Values.applicationSettings.etcdUseClientCertAuth | default "false" | quote }}
            {{- if .Values.applicationSettings.etcdUseTLS }}
            - name: GATEWAY_STORE_ETCD_CA_CERTIFICATE_FILE
              value: "/etc/ssl/etcd/ca.crt"
            - name: GATEWAY_STORE_ETCD_CERTIFICATE_FILE
              value: "/etc/ssl/etcd/tls.crt"
            - name: GATEWAY_STORE_ETCD_PRIVATE_KEY_FILE
              value: "/etc/ssl/etcd/tls.key"
            {{- end }}
            {{- end }}
            {{- if eq .Values.applicationSettings.storeBackend "dynamodb" }}
            - name: GATEWAY_STORE_DYNAMODB_TABLE_NAME
              value: {{ .Values.applicationSettings.dynamodbTableName }}
            {{- end }}
            {{- range $key, $value := .Values.applicationSettings.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            # Server mode settings
            {{- if not .Values.serverSettings.env.GATEWAY_SERVER_LISTEN_ADDRESS }}
            - name: GATEWAY_SERVER_LISTEN_ADDRESS
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            {{- end }}
            - name: GATEWAY_CONNECT_ENABLED
              value: {{ .Values.serverSettings.connectEnabled | default "false" | quote }}
            - name: GATEWAY_CONNECT_INSECURE_TLS
              value: {{ .Values.serverSettings.connectInsecureEnabled | default "false" | quote }}
            - name: GATEWAY_CONNECT_HOSTS
              value: {{ .Values.serverSettings.connectHosts }}
            - name: GATEWAY_SERVER_DISTRIBUTED_EXECUTION
              value: {{ $distributedExecution | quote }}
            - name: GATEWAY_CONNECT_SERVER_HA_ENABLED
              value: {{ $haEnabled | quote }}
            - name: GATEWAY_SERVER_USE_TLS
              value: {{ .Values.useTLS | default "false" | quote }}
            {{- if .Values.useTLS }}
            - name: GATEWAY_APPLICATION_CA_CERTIFICATE_FILE
              value: "/etc/ssl/gateway/ca.crt"
            - name: GATEWAY_SERVER_CERTIFICATE_FILE
              value: "/etc/ssl/gateway/tls.crt"
            - name: GATEWAY_SERVER_PRIVATE_KEY_FILE
              value: "/etc/ssl/gateway/tls.key"
            - name: GATEWAY_CONNECT_CERTIFICATE_FILE
              value: "/etc/ssl/gateway/tls.crt"
            - name: GATEWAY_CONNECT_PRIVATE_KEY_FILE
              value: "/etc/ssl/gateway/tls.key"
            {{- end }}
            {{- range $key, $value := .Values.serverSettings.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          {{- if eq .Values.applicationSettings.storeBackend "dynamodb" }}
          envFrom:
            - secretRef:
                name: dynamodb-aws-secrets
          {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: {{ include "iag5.fullname" . }}-server
              containerPort: {{ .Values.port }}
              protocol: TCP
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe.settings | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe.settings | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: gateway-secrets-volume
              mountPath: /etc/gateway/keys/encryption.key
              subPath: gatewayEncryptionKey
              readOnly: true
          {{- if .Values.useTLS }}
            - name: gateway-cert-volume
              mountPath: /etc/ssl/gateway
              readOnly: true
          {{- end }}
          {{- if .Values.applicationSettings.etcdUseTLS }}
            - name: etcd-client-certs
              mountPath: /etc/ssl/etcd
              readOnly: true
          {{- end }}
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: gateway-secrets-volume
          secret:
            secretName: itential-gateway-secrets
      {{- if .Values.useTLS }}
        - name: gateway-cert-volume
          secret:
            secretName: {{ include "iag5.fullname" . }}-tls-secret
      {{- end }}
      {{- if .Values.applicationSettings.etcdUseTLS }}
        - name: etcd-client-certs
          secret:
            secretName: "etcd-client-certs"
      {{- end }}
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}