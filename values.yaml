# Default values for iag5.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# These are used by the NOTES.txt template
hostname: iag5.example.com
port: 50051

# Set to false to disable etcd installation
etcd:
  enabled: true
  persistence:
    enabled: true
    storageClass: ""  # Use default storage class, or specify one
    accessModes:
      - ReadWriteOnce
    size: 8Gi
    annotations: {}
    selector: {}

  # For production, enable auth
  auth:
    rbac:
      create: false
      allowNoneAuthentication: true
    token:
      enabled: false

  # Replica configuration
  replicaCount: 3

  # Resource limits
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi

certManager:
  enabled: true

# Optional dependency to generate a static external DNS name
external-dns:
  enabled: false

# image The Itential image to use, its version, and its location
image:
  repository: "497639811223.dkr.ecr.us-east-2.amazonaws.com/automation-gateway5"
  tag: "5.1.1-amd64"
  pullPolicy: "IfNotPresent"

# imagePullSecrets The secrets object used to pull the image from the repo
imagePullSecrets:
  - name: ""

podAnnotations: {}
podLabels: {}
podSecurityContext: {}
securityContext: {}

# service The Kubernetes service object for this application
service:
  # type The service type
  type: "LoadBalancer"
  # name The name of this Kubernetes service object
  name: "iag5-service"
  # port The port that this service object is listening on
  port: 50051
  # targetPort The application port that this service object will send requests to
  targetPort: 50051
  # annotations on the service object, passed through as is
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-internal: "false"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
    external-dns.alpha.kubernetes.io/hostname: iag5.example.com
    external-dns.alpha.kubernetes.io/ttl: "60"

# ingress The Kubernetes ingress object for this application.
ingress:
  # enabled The ingress object can be disabled and will not be created with this set to false
  enabled: false
  # name The name of this Kubernetes ingress object
  name: "iag5-ingress"
  # className The ingress controller class name
  className: "nginx"
  hostname: "iag5.example.com"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    external-dns.alpha.kubernetes.io/hostname: iag5.example.com
    external-dns.alpha.kubernetes.io/ttl: "60"
  tls: []

issuer:
  enabled: true
  name: iag5-ca-issuer
  caSecretName: iag5-ca

certificate:
  enabled: true
  issuerRef:
    name: iag5-ca-issuer
    kind: Issuer
  renewBefore: 48h
  duration: 2160h
  hostname: iag5.example.com

resources: {}

livenessProbe:
  enabled: true
  settings:
    exec:
      command:
        - /bin/sh
        - -c
        - pgrep iagctl > /dev/null
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 3
    failureThreshold: 3

readinessProbe:
  enabled: true
  settings:
    exec:
      command:
        - /bin/sh
        - -c
        - pgrep iagctl > /dev/null
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 2
    successThreshold: 1
    failureThreshold: 3

autoscaling:
  enabled: false

# Runner settings depend on the architecture that is being installed and are not always required.
runnerSettings:
  replicaCount: 3
  runnerTlsSecretName:
  env:
    GATEWAY_RUNNER_CERTIFICATE_FILE: /etc/ssl/gateway/tls.crt
    GATEWAY_RUNNER_PRIVATE_KEY_FILE: /etc/ssl/gateway/tls.key
    GATEWAY_RUNNER_LISTEN_ADDRESS: "0.0.0.0"
    GATEWAY_RUNNER_USE_TLS: false

# At least one server must be defined.
serverSettings:
  replicaCount: 1
  serverTlsSecretName:
  env:
    GATEWAY_SERVER_DISTRIBUTED_EXECUTION: true
    GATEWAY_SERVER_CERTIFICATE_FILE: "/etc/ssl/gateway/tls.crt"
    GATEWAY_SERVER_PRIVATE_KEY_FILE: "/etc/ssl/gateway/tls.key"
    GATEWAY_SERVER_LISTEN_ADDRESS: "0.0.0.0"
    GATEWAY_SERVER_USE_TLS: false

applicationSettings:
  etcdTlsSecretName: etcd-tls-secret
  env:
    GATEWAY_APPLICATION_CA_CERTIFICATE_FILE: /etc/ssl/gateway/ca.crt
    GATEWAY_LOG_LEVEL: INFO
    GATEWAY_COMMANDER_ENABLED: false
    GATEWAY_STORE_BACKEND: etcd
    GATEWAY_STORE_ETCD_HOSTS: "iag5-etcd.default.svc.cluster.local:2379"
    GATEWAY_STORE_ETCD_USE_TLS: false
    GATEWAY_STORE_ETCD_CA_CERTIFICATE_FILE: /etc/ssl/etcd/ca.crt
    GATEWAY_STORE_ETCD_CERTIFICATE_FILE: /etc/ssl/etcd/tls-client.crt
    GATEWAY_STORE_ETCD_CLIENT_CERT_AUTH: true
    GATEWAY_STORE_ETCD_PRIVATE_KEY_FILE: /etc/ssl/etcd/tls-client.key

# Additional volumes on the output Deployment definition.
volumes: []

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []

nodeSelector: {}
tolerations: []
affinity: {}
