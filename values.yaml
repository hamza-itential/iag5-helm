# Default values for iag5.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- The intended hostname to use
hostname: iag5.example.com

# -- The intended port to use
port: 50051

# -- Turn on TLS connectivity between all the members. All on or all off.
useTLS: true

# Set to false to disable etcd installation. Below is a sample Etcd configuration if using the
# included dependency.
etcd:
  etcd:
  enabled: false
  # Enable etcd persistence
  persistence:
    enabled: true
    storageClass: "iag5-ebs-gp3"  # Use default storage class, or specify one
    accessModes:
      - ReadWriteOnce
    size: 8Gi
    annotations: {}
    selector: {}

  # For production, enable auth
  auth:
    rbac:
      create: false
      allowNoneAuthentication: true  # Allow no auth for development
    token:
      enabled: false
    tls:
      enabled: true
      autoGenerated: false
      peer:
        enabled: true
        existingSecret: "etcd-peer-certs"
        certFilename: "tls.crt"
        certKeyFilename: "tls.key"
        caFilename: "ca.crt"
      client:
        enabled: true
        existingSecret: "etcd-client-certs"
        certFilename: "tls.crt"
        certKeyFilename: "tls.key"
        caFilename: "ca.crt"
        certAuth: true

  # Replica configuration
  replicaCount: 3

  # Resource limits
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi

certManager:
  # -- Toggles the use of cert-manager for managing the TLS certificates. Setting this to false
  # means that creation of the TLS certificates will be manual and outside of the chart.
  enabled: true

external-dns:
  # -- Optional dependency to generate a static external DNS name
  enabled: false

# The Itential image to use, its version, and its location
image:
  # -- The image repository
  repository: "497639811223.dkr.ecr.us-east-2.amazonaws.com/automation-gateway5"
  # -- The image tag
  tag: "5.1.1-amd64"
  # -- The image pull policy
  pullPolicy: "IfNotPresent"

# -- The secrets object used to pull the image from the repo
imagePullSecrets:
  - name: ""

# -- Additional pod annotations
podAnnotations: {}
# -- Additional pod labels
podLabels: {}
# -- Additional pod security context
podSecurityContext: {}
# -- Additional security context
securityContext: {}

# The Kubernetes service object for this application
service:
  # -- The service type
  type: "LoadBalancer"
  # -- The name of this Kubernetes service object
  name: "iag5-service"
  # -- Annotations on the service object, passed through as is
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-internal: "false"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "TCP"
    external-dns.alpha.kubernetes.io/hostname: iag5.example.com
    external-dns.alpha.kubernetes.io/ttl: "60"

# The issuer to be used if using cert-manager to generate the TLS certificates
issuer:
  # -- The issuer type. Template defaults to Issuer.
  kind: Issuer
  # -- Toggle to use the issuer object or not
  enabled: true
  # -- The name of this issuer.
  name: iag5-ca-issuer
  # -- The CA secret to be used by this issuer when creating TLS certificates.
  caSecretName: itential-ca

# The certificate object to use by cert-manager to generate the TLS certificates.
certificate:
  # -- Toggle to use the certificate object or not
  enabled: true
  issuerRef:
    # -- The name of the issuer with the CA reference.
    name: iag5-ca-issuer
    # -- The issuer type
    kind: Issuer
  # -- Specifies how long before the certificate expires that cert-manager should try to renew.
  renewBefore: 48h
  # -- Specifies how long the certificate should be valid for (its lifetime).
  duration: 2160h
  # -- The list of static IPs to include in the certificate, if any.
  ipAddress: []
  # -- Include the list of service IP addresses.
  includeServiceIPs: true
  # -- The list of static DNS names to include in the certificate.
  dnsNames:
    - iag5.example.com
  # -- Specifies any private key properties
  privateKey: {} # include all required properties, passed to the template as is
  # -- Specifies any key store properties
  keyStores: {} # include all required properties, passed to the template as is
  # -- Specifies any subject fields required
  subject:  # include all required properties, passed to the template as is
    organizations:
      - "Itential"
    countries:
      - "US"
    localities:
      - "Atlanta"
    provinces:
      - "Georgia"
    streetAddresses:
      - "1350 Spring St NW"
    postalCodes:
      - "30309"

resources: {}

livenessProbe:
  enabled: true
  settings:
    exec:
      command:
        - /bin/sh
        - -c
        - pgrep iagctl > /dev/null
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 3
    failureThreshold: 3

readinessProbe:
  enabled: true
  settings:
    exec:
      command:
        - /bin/sh
        - -c
        - pgrep iagctl > /dev/null
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 2
    successThreshold: 1
    failureThreshold: 3

# Runner settings depend on the architecture that is being installed and are not always required.
# For a complete list of configuration options please consult the documentation:
# https://docs.itential.com/docs/iag5-config-variables
runnerSettings:
  # -- The number of runners to use. Set to zero to disable distributed runners.
  replicaCount: 0
  # Environment variables passed to the runner deployment pods
  env: {}
    # VAR_NAME: VAR_VALUE

# At least one server must be defined. This is a sampling of server variables that are available.
# For a complete list of configuration options please consult the documentation:
# https://docs.itential.com/docs/iag5-config-variables
serverSettings:
  # -- The number of servers to use. At least one server must be defined.
  replicaCount: 1
  # -- Enables or disables the connection to Gateway Manager.
  connectEnabled: true
  # -- Configures the hostname and port used to connect to Gateway Manager.
  connectHosts: "itential.example.com:8080"
  # -- Determines whether the gateway verifies TLS certificates when it connects to Itential
  # Platform. When set to true, the gateway skips TLS certificate verification. We strongly
  # recommend enabling TLS certificate verification in production environments.
  connectInsecureEnabled: false
  # Environment variables passed to the runner deployment pods
  env: {}
    # VAR_NAME: VAR_VALUE

# Application settings apply to all pods. This is a sampling of what is available.
# For a complete list of configuration options please consult the documentation:
# https://docs.itential.com/docs/iag5-config-variables
applicationSettings:
  # -- The name of the etcd TLS secret. This is mounted as a volume by the deployment and contains
  # the Etcd TLS certs and keys.
  etcdTlsSecretName: etcd-tls-secret
  # -- The ID that uniquely identifies your gateway instance or a cluster of related gateway
  # instances. This is also used to link a gateway controller node to Gateway Manager so that
  # automations can be sent to a particular cluster.
  clusterId: cluster_1
  # -- Sets the verbosity of the logs that the gateway displays to the console and file logs.
  # Possible values are: "TRACE", "DEBUG", "INFO", "WARN", "ERROR", "FATAL", "DISABLED".
  logLevel: DEBUG
  # -- Sets the backend type for persistent data storage. Itential Automation Gateway (IAG) uses
  # stores as key-value databases to persistently save objects. IAG supports three types of store
  # backends: "local", "memory", "etcd", "dynamodb"
  storeBackend: memory # "etcd", "memory", "dynamodb"

  # Etcd settings
  # -- Enable TLS when connecting the Etcd.
  etcdUseTLS: true
  # -- Enable certificate validation when connecting to Etcd.
  etcdUseClientCertAuth: true
  # -- Sets the etcd hosts that the gateway connects to for backend storage. A host entry consists
  # of an address and port: hostname:port. If there are multiple etcd hosts, enter them as a space
  # separated list: hostname1:port hostname2:port.
  etcdHosts: "etcd.default.svc.cluster.local:2379"

  # DynamoDB settings
  # -- The DynamoDB table name when storeBackend is set to "dynamodb"
  dynamodbTableName: ""

  # Environment variables passed to all of the deployment pods
  env: {}
    # VAR_NAME: VAR_VALUE

# -- Additional volumes on the output Deployment definition.
volumes: []

# -- Additional volumeMounts on the output Deployment definition.
volumeMounts: []

# -- Additional nodeSelectors
nodeSelector: {}

# -- Additonal tolerations
tolerations: []

# -- Additional affinities
affinity: {}
