suite: Test deployment-server.yaml template
templates:
  - deployment-server.yaml
values:
  - ../tests/test-values.yaml
tests:
  - it: should create deployment when serverSettings.replicaCount is set
    set:
      serverSettings.replicaCount: 1
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: metadata.name
          value: RELEASE-NAME-iag5-server
      - equal:
          path: spec.replicas
          value: 1
      - equal:
          path: spec.template.metadata.labels["app.kubernetes.io/component"]
          value: server

  - it: should not create deployment when serverSettings.replicaCount is 0
    set:
      serverSettings.replicaCount: 0
    asserts:
      - hasDocuments:
          count: 0

  - it: should set correct environment variables with default values
    set:
      serverSettings.replicaCount: 1
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: GATEWAY_APPLICATION_MODE
            value: "server"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: GATEWAY_STORE_ETCD_USE_TLS
            value: "false"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: GATEWAY_STORE_ETCD_CLIENT_CERT_AUTH
            value: "false"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: GATEWAY_CONNECT_SERVER_HA_ENABLED
            value: "false"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: GATEWAY_SERVER_USE_TLS
            value: "false"

  - it: should set TLS environment variables when useTLS is true
    set:
      serverSettings.replicaCount: 1
      useTLS: true
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: GATEWAY_SERVER_USE_TLS
            value: "true"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: GATEWAY_SERVER_CERTIFICATE_FILE
            value: "/etc/ssl/gateway/tls.crt"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: GATEWAY_SERVER_PRIVATE_KEY_FILE
            value: "/etc/ssl/gateway/tls.key"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: GATEWAY_CONNECT_CERTIFICATE_FILE
            value: "/etc/ssl/gateway/tls.crt"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: GATEWAY_CONNECT_PRIVATE_KEY_FILE
            value: "/etc/ssl/gateway/tls.key"

  - it: should set etcd TLS environment variables when etcdUseTLS is true
    set:
      serverSettings.replicaCount: 1
      etcdUseTLS: true
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: GATEWAY_STORE_ETCD_USE_TLS
            value: "true"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: GATEWAY_STORE_ETCD_CLIENT_CERT_AUTH
            value: "true"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: GATEWAY_STORE_ETCD_CA_CERTIFICATE_FILE
            value: "/etc/ssl/etcd/ca.crt"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: GATEWAY_STORE_ETCD_CERTIFICATE_FILE
            value: "/etc/ssl/etcd/tls.crt"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: GATEWAY_STORE_ETCD_PRIVATE_KEY_FILE
            value: "/etc/ssl/etcd/tls.key"

  - it: should enable distributed execution when runnerSettings.replicaCount is set
    set:
      serverSettings.replicaCount: 1
      runnerSettings.replicaCount: 2
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: GATEWAY_SERVER_DISTRIBUTED_EXECUTION
            value: "true"

  - it: should enable HA when serverSettings.replicaCount is greater than 1
    set:
      serverSettings.replicaCount: 3
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: GATEWAY_CONNECT_SERVER_HA_ENABLED
            value: "true"

  - it: should include applicationSettings environment variables
    set:
      serverSettings.replicaCount: 1
      applicationSettings:
        env:
          GATEWAY_APPLICATION_CLUSTER_ID: "test-cluster"
          GATEWAY_LOG_LEVEL: "DEBUG"
          GATEWAY_STORE_BACKEND: "etcd"
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: GATEWAY_APPLICATION_CLUSTER_ID
            value: "test-cluster"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: GATEWAY_LOG_LEVEL
            value: "DEBUG"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: GATEWAY_STORE_BACKEND
            value: "etcd"

  - it: should include serverSettings environment variables
    set:
      serverSettings:
        replicaCount: 1
        env:
          GATEWAY_CONNECT_ENABLED: "false"
          GATEWAY_CONNECT_HOSTS: "test.example.com:8080"
          CUSTOM_SERVER_VAR: "custom-value"
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: GATEWAY_CONNECT_ENABLED
            value: "false"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: GATEWAY_CONNECT_HOSTS
            value: "test.example.com:8080"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: CUSTOM_SERVER_VAR
            value: "custom-value"

  - it: should set GATEWAY_SERVER_LISTEN_ADDRESS from podIP when not specified
    set:
      serverSettings.replicaCount: 1
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: GATEWAY_SERVER_LISTEN_ADDRESS
            valueFrom:
              fieldRef:
                fieldPath: status.podIP

  - it: should not set GATEWAY_SERVER_LISTEN_ADDRESS when explicitly provided
    set:
      serverSettings:
        replicaCount: 1
        env:
          GATEWAY_SERVER_LISTEN_ADDRESS: "0.0.0.0"
    asserts:
      - notContains:
          path: spec.template.spec.containers[0].env
          content:
            name: GATEWAY_SERVER_LISTEN_ADDRESS
            valueFrom:
              fieldRef:
                fieldPath: status.podIP

  - it: should configure container image correctly
    set:
      serverSettings.replicaCount: 1
      image:
        repository: "test-repo"
        tag: "1.0.0"
        pullPolicy: "Always"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: "test-repo:1.0.0"
      - equal:
          path: spec.template.spec.containers[0].imagePullPolicy
          value: "Always"

  - it: should configure container ports correctly
    set:
      serverSettings.replicaCount: 1
      port: 8080
    asserts:
      - equal:
          path: spec.template.spec.containers[0].ports[0].name
          value: RELEASE-NAME-iag5-server
      - equal:
          path: spec.template.spec.containers[0].ports[0].containerPort
          value: 8080
      - equal:
          path: spec.template.spec.containers[0].ports[0].protocol
          value: TCP

  - it: should include liveness probe when enabled
    set:
      serverSettings.replicaCount: 1
      livenessProbe:
        enabled: true
        settings:
          exec:
            command:
              - /bin/sh
              - -c
              - pgrep iagctl > /dev/null
          initialDelaySeconds: 10
    asserts:
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.exec.command[0]
          value: "/bin/sh"
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.initialDelaySeconds
          value: 10

  - it: should not include liveness probe when disabled
    set:
      serverSettings.replicaCount: 1
      livenessProbe:
        enabled: false
    asserts:
      - isNull:
          path: spec.template.spec.containers[0].livenessProbe

  - it: should include readiness probe when enabled
    set:
      serverSettings.replicaCount: 1
      readinessProbe:
        enabled: true
        settings:
          exec:
            command:
              - /bin/sh
              - -c
              - pgrep iagctl > /dev/null
          initialDelaySeconds: 5
    asserts:
      - equal:
          path: spec.template.spec.containers[0].readinessProbe.exec.command[0]
          value: "/bin/sh"
      - equal:
          path: spec.template.spec.containers[0].readinessProbe.initialDelaySeconds
          value: 5

  - it: should not include readiness probe when disabled
    set:
      serverSettings.replicaCount: 1
      readinessProbe:
        enabled: false
    asserts:
      - isNull:
          path: spec.template.spec.containers[0].readinessProbe

  - it: should mount TLS volumes when useTLS is true
    set:
      serverSettings.replicaCount: 1
      useTLS: true
    asserts:
      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            name: gateway-cert-volume
            mountPath: /etc/ssl/gateway/tls.crt
            subPath: tls.crt
            readOnly: true
      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            name: gateway-cert-volume
            mountPath: /etc/ssl/gateway/tls.key
            subPath: tls.key
            readOnly: true
      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            name: gateway-cert-volume
            mountPath: /etc/ssl/gateway/ca.crt
            subPath: ca.crt
            readOnly: true
      - contains:
          path: spec.template.spec.volumes
          content:
            name: gateway-cert-volume
            secret:
              secretName: RELEASE-NAME-iag5-tls-secret

  - it: should mount etcd TLS volumes when etcdUseTLS is true
    set:
      serverSettings.replicaCount: 1
      etcdUseTLS: true
    asserts:
      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            name: etcd-client-certs
            mountPath: /etc/ssl/etcd
            readOnly: true
      - contains:
          path: spec.template.spec.volumes
          content:
            name: etcd-client-certs
            secret:
              secretName: "etcd-client-certs"

  - it: should include custom volumes and volumeMounts
    set:
      serverSettings.replicaCount: 1
      volumes:
        - name: custom-volume
          configMap:
            name: custom-config
      volumeMounts:
        - name: custom-volume
          mountPath: /etc/custom
    asserts:
      - contains:
          path: spec.template.spec.volumes
          content:
            name: custom-volume
            configMap:
              name: custom-config
      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            name: custom-volume
            mountPath: /etc/custom

  - it: should include imagePullSecrets when specified
    set:
      serverSettings.replicaCount: 1
      imagePullSecrets:
        - name: my-registry-secret
    asserts:
      - contains:
          path: spec.template.spec.imagePullSecrets
          content:
            name: my-registry-secret

  - it: should include nodeSelector when specified
    set:
      serverSettings.replicaCount: 1
      nodeSelector:
        kubernetes.io/arch: amd64
    asserts:
      - equal:
          path: spec.template.spec.nodeSelector
          value:
            kubernetes.io/arch: amd64

  - it: should include affinity when specified
    set:
      serverSettings.replicaCount: 1
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
    asserts:
      - isNotNull:
          path: spec.template.spec.affinity.nodeAffinity

  - it: should include tolerations when specified
    set:
      serverSettings.replicaCount: 1
      tolerations:
        - key: node-type
          operator: Equal
          value: compute
          effect: NoSchedule
    asserts:
      - contains:
          path: spec.template.spec.tolerations
          content:
            key: node-type
            operator: Equal
            value: compute
            effect: NoSchedule

  - it: should include podAnnotations and podLabels
    set:
      serverSettings.replicaCount: 1
      podAnnotations:
        custom.annotation: "value"
      podLabels:
        custom.label: "value"
    asserts:
      - equal:
          path: spec.template.metadata.annotations["custom.annotation"]
          value: "value"
      - equal:
          path: spec.template.metadata.labels["custom.label"]
          value: "value"

  - it: should apply security contexts
    set:
      serverSettings.replicaCount: 1
      podSecurityContext:
        runAsUser: 1000
        runAsGroup: 1000
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
    asserts:
      - equal:
          path: spec.template.spec.securityContext.runAsUser
          value: 1000
      - equal:
          path: spec.template.spec.securityContext.runAsGroup
          value: 1000
      - equal:
          path: spec.template.spec.containers[0].securityContext.allowPrivilegeEscalation
          value: false
      - equal:
          path: spec.template.spec.containers[0].securityContext.readOnlyRootFilesystem
          value: true

  - it: should configure resources when specified
    set:
      serverSettings.replicaCount: 1
      resources:
        requests:
          cpu: 100m
          memory: 128Mi
        limits:
          cpu: 500m
          memory: 512Mi
    asserts:
      - equal:
          path: spec.template.spec.containers[0].resources.requests.cpu
          value: 100m
      - equal:
          path: spec.template.spec.containers[0].resources.requests.memory
          value: 128Mi
      - equal:
          path: spec.template.spec.containers[0].resources.limits.cpu
          value: 500m
      - equal:
          path: spec.template.spec.containers[0].resources.limits.memory
          value: 512Mi

  - it: should have the expected standard annotations
    set:
      serverSettings:
        replicaCount: 1
    asserts:
      - exists:
          path: spec.template.metadata.annotations["itential.com/copyright"]
      - exists:
          path: spec.template.metadata.annotations["itential.com/license"]
      - exists:
          path: spec.template.metadata.annotations["helm.sh/template-file"]

  - it: should allow for custom annotations
    set:
      serverSettings:
        replicaCount: 1
      podAnnotations:
        foo: "bar"
    asserts:
      - equal:
          path: spec.template.metadata.annotations["foo"]
          value: bar