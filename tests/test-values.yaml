# Default values for iag5.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

hostname: iag5.example.com
useTLS: false
etcdUseTLS: false
port: 50051

image:
  repository: "497639811223.dkr.ecr.us-east-2.amazonaws.com/automation-gateway5"
  tag: "5.1.1-amd64"
  pullPolicy: "IfNotPresent"

imagePullSecrets:
  - name: ""

podAnnotations: {}
podLabels: {}
podSecurityContext: {}
securityContext: {}

service:
  type: "LoadBalancer"
  name: "iag5-service"
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-internal: "false"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "TCP"
    external-dns.alpha.kubernetes.io/hostname: iag5.example.com
    external-dns.alpha.kubernetes.io/ttl: "60"

issuer:
  kind: Issuer
  enabled: true
  name: iag5-ca-issuer
  caSecretName: itential-ca

certificate:
  enabled: true
  issuerRef:
    name: iag5-ca-issuer
    kind: Issuer
  renewBefore: 48h
  duration: 2160h
  ipAddress: []
  includeServiceIPs: true
  dnsNames:
    - iag5.example.com
  privateKey: {}
  keyStores: {}
  subject:
    organizations:
      - "Itential"
    countries:
      - "US"
    localities:
      - "Atlanta"
    provinces:
      - "Georgia"
    streetAddresses:
      - "1350 Spring St NW"
    postalCodes:
      - "30309"

resources: {}

livenessProbe:
  enabled: true
  settings:
    exec:
      command:
        - /bin/sh
        - -c
        - pgrep iagctl > /dev/null
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 3
    failureThreshold: 3

readinessProbe:
  enabled: true
  settings:
    exec:
      command:
        - /bin/sh
        - -c
        - pgrep iagctl > /dev/null
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 2
    successThreshold: 1
    failureThreshold: 3

runnerSettings:
  replicaCount: 3
  env:

serverSettings:
  replicaCount: 1
  env:
    GATEWAY_CONNECT_ENABLED: true
    GATEWAY_CONNECT_HOSTS: "iag5.example.com:8080"
    GATEWAY_CONNECT_INSECURE_TLS: false

applicationSettings:
  env:
    GATEWAY_APPLICATION_CLUSTER_ID: cluster_1
    GATEWAY_LOG_LEVEL: INFO
    GATEWAY_STORE_BACKEND: etcd
    GATEWAY_STORE_ETCD_HOSTS: ""
    GATEWAY_STORE_ETCD_USE_TLS: false
    #GATEWAY_STORE_DYNAMODB_TABLE_NAME: ""

volumes: []

volumeMounts: []

nodeSelector: {}

tolerations: []

affinity: {}
