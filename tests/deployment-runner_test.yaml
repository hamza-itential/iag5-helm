suite: Test deployment-runner.yaml template
templates:
  - deployment-runner.yaml
tests:
  - it: should not render when runnerSettings.replicaCount is not set
    set:
      runnerSettings: {}
    asserts:
      - hasDocuments:
          count: 0

  - it: should render deployment when runnerSettings.replicaCount is set
    set:
      runnerSettings:
        replicaCount: 2
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - equal:
          path: metadata.name
          value: RELEASE-NAME-iag5-runner
      - equal:
          path: spec.replicas
          value: 2

  - it: should include correct labels
    set:
      runnerSettings:
        replicaCount: 1
    asserts:
      - equal:
          path: spec.template.metadata.labels["app.kubernetes.io/component"]
          value: runner
      - exists:
          path: metadata.labels
      - exists:
          path: spec.template.metadata.labels

  - it: should set correct container command for runner mode
    set:
      runnerSettings:
        replicaCount: 1
    asserts:
      - equal:
          path: spec.template.spec.containers[0].command[0]
          value: "/usr/local/bin/iagctl"
      - equal:
          path: spec.template.spec.containers[0].command[1]
          value: "runner"

  - it: should set GATEWAY_APPLICATION_MODE to runner
    set:
      runnerSettings:
        replicaCount: 1
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: GATEWAY_APPLICATION_MODE
            value: "runner"

  - it: should set GATEWAY_RUNNER_LISTEN_ADDRESS from podIP when not provided
    set:
      runnerSettings:
        replicaCount: 1
        env: {}
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: GATEWAY_RUNNER_LISTEN_ADDRESS
            valueFrom:
              fieldRef:
                fieldPath: status.podIP

  - it: should not set GATEWAY_RUNNER_LISTEN_ADDRESS from podIP when provided in env
    set:
      runnerSettings:
        replicaCount: 1
        env:
          GATEWAY_RUNNER_LISTEN_ADDRESS: "0.0.0.0:8080"
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: GATEWAY_RUNNER_LISTEN_ADDRESS
            value: "0.0.0.0:8080"
      - notContains:
          path: spec.template.spec.containers[0].env
          content:
            name: GATEWAY_RUNNER_LISTEN_ADDRESS
            valueFrom:
              fieldRef:
                fieldPath: status.podIP

  - it: should include runner environment variables
    set:
      runnerSettings:
        replicaCount: 1
        env:
          RUNNER_VAR1: "value1"
          RUNNER_VAR2: "value2"
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: RUNNER_VAR1
            value: "value1"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: RUNNER_VAR2
            value: "value2"

  - it: should include application environment variables
    set:
      runnerSettings:
        replicaCount: 1
      applicationSettings:
        env:
          APP_VAR1: "appvalue1"
          APP_VAR2: "appvalue2"
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: APP_VAR1
            value: "appvalue1"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: APP_VAR2
            value: "appvalue2"

  - it: should include etcd init container when etcd is enabled
    set:
      runnerSettings:
        replicaCount: 1
      etcd:
        enabled: true
    asserts:
      - exists:
          path: spec.template.spec.initContainers
      - equal:
          path: spec.template.spec.initContainers[0].name
          value: wait-for-etcd-cluster
      - equal:
          path: spec.template.spec.initContainers[0].image
          value: bitnami/etcd:latest

  - it: should not include etcd init container when etcd is disabled
    set:
      runnerSettings:
        replicaCount: 1
      etcd:
        enabled: false
    asserts:
      - notExists:
          path: spec.template.spec.initContainers

  - it: should include TLS volume mounts when GATEWAY_RUNNER_USE_TLS is true
    set:
      runnerSettings:
        replicaCount: 1
        env:
          GATEWAY_RUNNER_USE_TLS: "true"
    asserts:
      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            name: gateway-cert-volume
            mountPath: /etc/ssl/gateway/tls.crt
            subPath: tls.crt
            readOnly: true
      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            name: gateway-cert-volume
            mountPath: /etc/ssl/gateway/tls.key
            subPath: tls.key
            readOnly: true
      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            name: gateway-cert-volume
            mountPath: /etc/ssl/gateway/ca.crt
            subPath: ca.crt
            readOnly: true

  - it: should include TLS volume when GATEWAY_RUNNER_USE_TLS is true
    set:
      runnerSettings:
        replicaCount: 1
        env:
          GATEWAY_RUNNER_USE_TLS: "true"
    asserts:
      - contains:
          path: spec.template.spec.volumes
          content:
            name: gateway-cert-volume
            secret:
              secretName: RELEASE-NAME-iag5-tls-secret

  - it: should include etcd TLS volume mount when GATEWAY_STORE_ETCD_USE_TLS is true
    set:
      runnerSettings:
        replicaCount: 1
      applicationSettings:
        env:
          GATEWAY_STORE_ETCD_USE_TLS: "true"
        etcdTlsSecretName: "my-etcd-secret"
    asserts:
      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            name: etcd-cert-volume
            mountPath: /etc/ssl/etcd
            readOnly: true

  - it: should include etcd TLS volume when GATEWAY_STORE_ETCD_USE_TLS is true
    set:
      runnerSettings:
        replicaCount: 1
      applicationSettings:
        env:
          GATEWAY_STORE_ETCD_USE_TLS: "true"
        etcdTlsSecretName: "my-etcd-secret"
    asserts:
      - contains:
          path: spec.template.spec.volumes
          content:
            name: etcd-cert-volume
            secret:
              secretName: "my-etcd-secret"

  - it: should not include TLS volumes when TLS is disabled
    set:
      runnerSettings:
        replicaCount: 1
        env:
          GATEWAY_RUNNER_USE_TLS: "false"
      applicationSettings:
        env:
          GATEWAY_STORE_ETCD_USE_TLS: "false"
    asserts:
      - notContains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            name: gateway-cert-volume
      - notContains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            name: etcd-cert-volume

  - it: should include custom volume mounts
    set:
      runnerSettings:
        replicaCount: 1
      volumeMounts:
        - name: custom-volume
          mountPath: /custom/path
          readOnly: true
    asserts:
      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            name: custom-volume
            mountPath: /custom/path
            readOnly: true

  - it: should include custom volumes
    set:
      runnerSettings:
        replicaCount: 1
      volumes:
        - name: custom-volume
          configMap:
            name: my-config
    asserts:
      - contains:
          path: spec.template.spec.volumes
          content:
            name: custom-volume
            configMap:
              name: my-config

  - it: should set image from values
    set:
      runnerSettings:
        replicaCount: 1
      image:
        repository: "my-registry/iag5"
        tag: "v1.2.3"
        pullPolicy: "Always"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: "my-registry/iag5:v1.2.3"
      - equal:
          path: spec.template.spec.containers[0].imagePullPolicy
          value: "Always"

  - it: should include probes when enabled
    set:
      runnerSettings:
        replicaCount: 1
      livenessProbe:
        enabled: true
        settings:
          httpGet:
            path: /health
            port: 8080
      readinessProbe:
        enabled: true
        settings:
          httpGet:
            path: /ready
            port: 8080
    asserts:
      - exists:
          path: spec.template.spec.containers[0].livenessProbe
      - exists:
          path: spec.template.spec.containers[0].readinessProbe
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.httpGet.path
          value: "/health"
      - equal:
          path: spec.template.spec.containers[0].readinessProbe.httpGet.path
          value: "/ready"

  - it: should not include probes when disabled
    set:
      runnerSettings:
        replicaCount: 1
      livenessProbe:
        enabled: false
      readinessProbe:
        enabled: false
    asserts:
      - notExists:
          path: spec.template.spec.containers[0].livenessProbe
      - notExists:
          path: spec.template.spec.containers[0].readinessProbe

  - it: should include pod annotations
    set:
      runnerSettings:
        replicaCount: 1
      podAnnotations:
        annotation1: "value1"
        annotation2: "value2"
    asserts:
      - equal:
          path: spec.template.metadata.annotations.annotation1
          value: "value1"
      - equal:
          path: spec.template.metadata.annotations.annotation2
          value: "value2"

  - it: should include pod labels
    set:
      runnerSettings:
        replicaCount: 1
      podLabels:
        label1: "value1"
        label2: "value2"
    asserts:
      - equal:
          path: spec.template.metadata.labels.label1
          value: "value1"
      - equal:
          path: spec.template.metadata.labels.label2
          value: "value2"

  - it: should include node selector
    set:
      runnerSettings:
        replicaCount: 1
      nodeSelector:
        disktype: ssd
        environment: production
    asserts:
      - equal:
          path: spec.template.spec.nodeSelector.disktype
          value: "ssd"
      - equal:
          path: spec.template.spec.nodeSelector.environment
          value: "production"